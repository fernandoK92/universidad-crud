generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrera {
  id             Int            @id @default(autoincrement())
  nombre         String
  estudiantes    Estudiante[]    
  docentesCarrera DocenteCarrera[] 
  materias       Materia[]       @relation("CarreraMaterias") 
  registros      Registro[]      
}

model Materia {
  id             Int             @id @default(autoincrement())
  nombre         String
  registros      Registro[]      
  inscripciones  Inscripcion[]   
  dictan         Dictan[]        
  carreras       Carrera[]       @relation("CarreraMaterias") 
}

model Estudiante {
  id             Int             @id @default(autoincrement())
  nombre         String
  carreraId      Int             
  carrera        Carrera         @relation(fields: [carreraId], references: [id])
  inscripciones  Inscripcion[]   
}

model Docente {
  id             Int              @id @default(autoincrement())
  nombre         String
  dictan         Dictan[]         
  docentesCarrera DocenteCarrera[] 
}

model Registro {
  id          Int       @id @default(autoincrement())
  carreraId   Int
  materiaId   Int 
  carrera     Carrera   @relation(fields: [carreraId], references: [id])
  materia     Materia   @relation(fields: [materiaId], references: [id])
}

model Inscripcion {
  id            Int         @id @default(autoincrement())
  estudianteId  Int
  materiaId     Int 
  estudiante    Estudiante  @relation(fields: [estudianteId], references: [id])
  materia       Materia     @relation(fields: [materiaId], references: [id])
}

model Dictan {
  id          Int      @id @default(autoincrement())
  docenteId   Int
  materiaId   Int 
  docente     Docente  @relation(fields: [docenteId], references: [id])
  materia     Materia  @relation(fields: [materiaId], references: [id])
}

model DocenteCarrera {
  id          Int      @id @default(autoincrement())
  docenteId   Int
  carreraId   Int
  docente     Docente  @relation(fields: [docenteId], references: [id])
  carrera     Carrera  @relation(fields: [carreraId], references: [id])
}
// ...tu schema actual...

model Usuario {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  password  String
  roles     UsuarioRol[]
}

model Rol {
  id        Int         @id @default(autoincrement())
  nombre    String      @unique
  permisos  RolPermiso[]
  usuarios  UsuarioRol[]
}

model Permiso {
  id        Int         @id @default(autoincrement())
  nombre    String      @unique
  roles     RolPermiso[]
}

model UsuarioRol {
  id        Int     @id @default(autoincrement())
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  rol       Rol     @relation(fields: [rolId], references: [id])
  rolId     Int
}

model RolPermiso {
  id        Int      @id @default(autoincrement())
  rol       Rol      @relation(fields: [rolId], references: [id])
  rolId     Int
  permiso   Permiso  @relation(fields: [permisoId], references: [id])
  permisoId Int
}



